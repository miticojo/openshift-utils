- name: FACTS | Do facts module to get latest information
  setup:

- name: FACTS | SELinux is required for openshift 3.x
  shell: "test $(getenforce) == 'Enforcing'"
  changed_when: False
  register: selinux_check
  ignore_errors: yes

- name: FACTS | Confirm DNS resolution for localhost
  command: "ping -c1 localhost"
  changed_when: False

- name: FACTS | Confirm DNS resoultion for short domain name of this host
  shell: "ping -c1 $(hostname -s)"
  changed_when: False

- name: FACTS | Confirm DNS resolution for fully-qualified domain name of this host
  shell: "ping -c1 $(hostname -f)"
  changed_when: False

- name: FACTS | Check if variables are not empty
  assert:
    that:
    - item != ''
    msg: "{{item}} is empty"
  with_items:
  - ocp_internal_domain
  - ocp_public_domain
  - ocp_version

- name: FACTS | Do facts module to get latest information
  setup:

- name: FACTS | Define internal iface when multiple ifaces exist
  set_fact: ose_internal_iface="{{item}}"
  when:
  - ansible_interfaces > 2
  - "'ipv4' in hostvars[inventory_hostname]['ansible_' + item]"
  - hostvars[inventory_hostname]['ansible_' + item].type == 'ether'
  - hostvars[inventory_hostname]['ansible_' + item].active == true
  - hostvars[inventory_hostname]['ansible_' + item].ipv4.address != ansible_host
  with_items: "{{ansible_interfaces}}"

- name: FACTS | Define internal iface when single iface exists
  set_fact: ose_internal_iface='item'
  when:
  - ose_internal_iface is undefined
  - "'ipv4' in hostvars[inventory_hostname]['ansible_' + item]"
  - hostvars[inventory_hostname]['ansible_' + item].type == 'ether'
  - hostvars[inventory_hostname]['ansible_' + item].active == true
  - hostvars[inventory_hostname]['ansible_' + item].ipv4.address == ansible_host
  with_items: "{{ansible_interfaces}}"

- name: FACTS | Define docker version for current OCP version
  set_fact:
    ocp_docker_ver: "{{ ocp_docker_ver_map | selectattr('ocp', 'equalto', ocp_version) | map(attribute='docker') | list | first }}"

- debug: msg="{{ocp_docker_ver}}"

- name: FACTS | Check  ocp_docker_ver is not empty
  assert:
    msg: "ocp_docker_ver is empty or undefined"
    that:
    - not ocp_docker_ver is undefined
    - not ocp_docker_ver == ''
