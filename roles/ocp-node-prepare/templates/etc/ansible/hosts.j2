# Create an OSEv3 group that contains the master, nodes, etcd, and lb groups.
# The lb group lets Ansible configure HAProxy as the load balancing solution.
# Comment lb out if your load balancer is pre-configured.
[OSEv3:children]
masters
nodes
etcd
{% if "lb" in groups %}
lb
{% endif %}
{% if ocp_glusterfs %}
glusterfs
{% endif %}
{% if "infra" in groups %}
infra
{% endif %}

# Set variables common for all OSEv3 hosts
[OSEv3:vars]
ansible_ssh_user=root
deployment_type=openshift-enterprise

{% if ocp_custom_certs %}
# Custom Certs
openshift_master_overwrite_named_certificates=true
openshift_master_named_certificates=[{"certfile": "{{ '{{ inventory_dir }}'}}/pki/server.cer", "keyfile": "{{ '{{ inventory_dir }}' }}/pki/server.key", "names": ["{{ocp_master_cluster_public_hostname}}"], "cafile": "{{ '{{ inventory_dir }}' }}/pki/ca.cer"}]
openshift_hosted_router_certificate={"certfile": "{{ '{{ inventory_dir }}' }}/pki/server.cer", "keyfile": "{{ '{{ inventory_dir }}' }}/pki/server.key", "cafile": "{{ '{{ inventory_dir }}' }}/pki/ca.cer"}
{% endif %}

# check disabled for lab purpose (NON PRODUCTION)
openshift_disable_check=disk_availability,docker_storage,memory_availability,docker_image_availability,package_version
# Uncomment the following to enable htpasswd authentication; defaults to
# DenyAllPasswordIdentityProvider.
openshift_master_identity_providers={{ocp_master_identity_providers}}

# Native high availbility cluster method with optional load balancer.
# If no lb group is defined installer assumes that a load balancer has
# been preconfigured. For installation the value of
# openshift_master_cluster_hostname must resolve to the load balancer
# or to one or all of the masters defined in the inventory if no load
# balancer is present.
openshift_master_cluster_method={{ocp_master_cluster_method}}
openshift_master_cluster_hostname={{ocp_master_cluster_hostname}}
openshift_master_cluster_public_hostname={{ocp_master_cluster_public_hostname}}
openshift_master_default_subdomain={{ocp_master_default_subdomain}}

{% if ocp_glusterfs %}
# GlusterFs
openshift_hosted_registry_storage_kind=glusterfs
openshift_hosted_registry_replicas=1
openshift_storage_glusterfs_namespace=app-storage
openshift_storage_glusterfs_storageclass=true
openshift_storage_glusterfs_storageclass_default=false
{% endif %}

{% if ocp_version is version('3.9', '<=') %}
# Audit
openshift_master_audit_config={"enabled": true, "auditFilePath": "/var/log/rhocp-audit.log", "maximumFileRetentionDays": 14, "maximumFileSizeMegabytes": 500, "maximumRetainedFiles": 5}
{% endif %}

# Metrics
{% if ocp_version is version('3.9', '<=') %}
openshift_metrics_deploy={{ocp_hosted_metrics_deploy}}
openshift_logging_deploy={{ocp_hosted_logging_deploy}}
{% else %}
openshift_metrics_install_metrics={{ocp_hosted_metrics_deploy}}
openshift_metrics_cassandra_nodeselector={"region":"infra"}
openshift_metrics_hawkular_nodeselector={"region":"infra"}
openshift_metrics_heapster_nodeselector={"region":"infra"}

# Node Groups
openshift_node_groups=[{'name': 'node-config-master', 'labels': ['node-role.kubernetes.io/master=true','region=master']}, {'name': 'node-config-infra', 'labels': ['node-role.kubernetes.io/infra=true','region=infra']}, {'name': 'node-config-compute', 'labels': ['node-role.kubernetes.io/compute=true','region=primary']}, {'name': 'node-config-compute-infra', 'labels': ['node-role.kubernetes.io/infra=true','region=infra','node-role.kubernetes.io/compute=true','node=compute']} ]
{% endif %}
openshift_enable_service_catalog={{ocp_enable_service_catalog}}

# Network
openshift_node_dnsmasq_additional_config_file={{ocp_node_dnsmasq_additional_config_file}}
os_sdn_network_plugin_name={{ocp_network_plugin}}
osm_cluster_network_cidr=10.128.0.0/14
openshift_portal_net=172.30.0.0/16
#openshift_master_external_ip_network_cidrs=['0.0.0.0/0']
#openshift_master_ingress_ip_network_cidr=172.46.0.0/16
#openshift_master_api_port=8443
#openshift_master_console_port=8443
openshift_set_node_ip=True

{% if ocp_version is version('3.9', '<=') %}
# Default Selector
osm_default_node_selector='node=compute'
openshift_router_selector='region=infra'
openshift_registry_selector='region=infra'
{% endif %}

openshift_clock_enabled=true

{%- if ocp_version is version('3.9','<=') %}
# Node kubelet config
openshift_node_kubelet_args={'pods-per-core': ['10'], 'max-pods': ['250'], 'image-gc-high-threshold': ['90'], 'image-gc-low-threshold': ['80']}
{% endif %}

# Certificates expiration
openshift_hosted_registry_cert_expire_days=730
openshift_ca_cert_expire_days=1825
openshift_node_cert_expire_days=730
openshift_master_cert_expire_days=730
etcd_ca_default_days=1825

# Container engine config
container_runtime_docker_storage_type={{ocp_container_runtime_docker_storage_type}}
docker_version="{{ocp_docker_ver}}"
openshift_docker_options="--log-driver json-file --log-opt max-size=10M --log-opt max-file=1"

# Console/SSN config
#openshift_master_session_name=ssn
#openshift_master_session_max_seconds=3600

{% if ocp_vagrant_provider != '' %}
ocp_vagrant_provider="{{ocp_vagrant_provider}}"
{% endif %}


# host group for masters
[masters]
{% for host in groups["masters"] %}
{{hostvars[host].ansible_hostname}} openshift_public_ip={{ hostvars[host]['ansible_default_ipv4']['address'] }} openshift_ip={{ hostvars[host]['ansible_' + ose_internal_iface]['ipv4']['address'] }} openshift_schedulable=true
{% endfor %}

# host group for etcd
[etcd]
{% for host in groups["etcd"] %}
{{hostvars[host].ansible_hostname}} openshift_public_ip={{ hostvars[host]['ansible_default_ipv4']['address'] }} openshift_ip={{ hostvars[host]['ansible_' + ose_internal_iface]['ipv4']['address'] }}
{% endfor %}

{% if "lb" in groups %}
[lb]
{% for host in groups["lb"] %}
{{hostvars[host].ansible_hostname}}
{% endfor %}
{% endif %}

{% if "infra" in groups %}
[infra]
{% for host in groups["infra"] %}
{{hostvars[host].ansible_hostname}}
{% endfor %}
{% endif %}

{% if ocp_glusterfs %}
[glusterfs]
{% for host in groups["nodes"] %}
{% if "infra" in groups and "infra" in host %}
{{hostvars[host].ansible_hostname}} glusterfs_devices='[ "/dev/vdb" ]'
{% elif "node" in host and not "infra" in groups %}
{{hostvars[host].ansible_hostname}} glusterfs_devices='[ "/dev/vdb" ]'
{% endif %}
{% endfor %}
{% endif %}

# host group for nodes, includes region info
[nodes]
{% for host in groups["nodes"] %}
{{hostvars[host].ansible_hostname}} openshift_public_ip={{ hostvars[host]['ansible_default_ipv4']['address'] }} openshift_ip={{ hostvars[host]['ansible_' + ose_internal_iface]['ipv4']['address'] }}
{%- if not host in groups["masters"] and not "infra" in groups and "node" in host %}
{%- if ocp_version is version('3.9', '>') %}
 openshift_node_group_name="node-config-compute-infra"
{% else %}
 openshift_node_labels="{'region': 'infra', 'node': 'compute', 'zone': 'default'}"
{% endif %}
{% elif not host in groups["masters"] and "infra" in groups and "node" not in host %}
{%- if ocp_version is version('3.9', '>') %}
 openshift_node_group_name="node-config-infra"
{% else %}
 openshift_node_labels="{'region': 'infra', 'zone': 'default'}"
{% endif %}
{% else %}
{%- if host in groups["masters"] %}
{%- if ocp_version is version('3.9', '>') %}
 openshift_node_group_name="node-config-master"
{% else %}
 openshift_node_labels="{'region': 'master', 'zone': 'default'}"
{% endif %}
{% else %}
{%- if ocp_version is version('3.9', '>') %}
 openshift_node_group_name="node-config-compute"
{% else %}
 openshift_node_labels="{'region': 'primary', 'zone': 'default', 'node': 'compute'}"
{% endif %}
{% endif %}
{% endif %}
{% endfor %}